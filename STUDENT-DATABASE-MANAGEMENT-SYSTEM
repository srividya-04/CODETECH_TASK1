CREATE TABLE Students (
    StudentID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    DOB DATE NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE Courses (
    CourseID INT AUTO_INCREMENT PRIMARY KEY,
    CourseName VARCHAR(100) NOT NULL,
    Credits INT NOT NULL
);

CREATE TABLE Enrollments (
    EnrollmentID INT AUTO_INCREMENT PRIMARY KEY,
    StudentID INT NOT NULL,
    CourseID INT NOT NULL,
    Grade CHAR(2),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID) ON DELETE CASCADE,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID) ON DELETE CASCADE
);
-- View all data in the Students table
SELECT * FROM Students;

-- View all data in the Courses table
SELECT * FROM Courses;

-- View all data in the Enrollments table
SELECT * FROM Enrollments;
-- Insert data into Students
INSERT INTO Students (FirstName, LastName, DOB, Email)
VALUES
('Alice', 'Johnson', '2000-05-10', 'alice.johnson@example.com'),
('Bob', 'Smith', '1999-08-15', 'bob.smith@example.com');

-- Insert data into Courses
INSERT INTO Courses (CourseName, Credits)
VALUES
('Mathematics', 3),
('Physics', 4),
('Computer Science', 3);

-- Insert data into Enrollments
INSERT INTO Enrollments (StudentID, CourseID, Grade)
VALUES
(1, 1, 'A'),
(1, 3, 'B'),
(2, 2, 'A');
 -- View all data in the Students table
SELECT * FROM Students;

-- View all data in the Courses table
SELECT * FROM Courses;

-- View all data in the Enrollments table
SELECT * FROM Enrollments;
-- Retrieve all students
SELECT * FROM Students;

-- Retrieve all courses
SELECT * FROM Courses;

-- Retrieve all enrollments
SELECT * FROM Enrollments;

-- Retrieve courses a specific student is enrolled in
SELECT s.FirstName, s.LastName, c.CourseName, e.Grade
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
JOIN Courses c ON e.CourseID = c.CourseID
WHERE s.StudentID = 1;

-- Calculate the total credits a student is enrolled in
SELECT s.FirstName, s.LastName, SUM(c.Credits) AS TotalCredits
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
JOIN Courses c ON e.CourseID = c.CourseID
WHERE s.StudentID = 1
GROUP BY s.StudentID;
-- Update a student's email address
UPDATE Students
SET Email = 'alice.updated@example.com'
WHERE StudentID = 1;

-- Update a course name
UPDATE Courses
SET CourseName = 'Advanced Mathematics'
WHERE CourseID = 1;

-- Update a grade for a specific enrollment
UPDATE Enrollments
SET Grade = 'A+'
WHERE EnrollmentID = 2;
select * from Students;
select * from Courses;
select * from Enrollments;
-- Delete a student and their enrollments
DELETE FROM Students
WHERE StudentID = 2;

-- Delete a course and related enrollments
DELETE FROM Courses
WHERE CourseID = 3;
select * from Students;
select * from Courses;
select * from Enrollments;
